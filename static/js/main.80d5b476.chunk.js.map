{"version":3,"sources":["Header.js","BasicCard.jsx","RankCard.jsx","KingCard.jsx","PaperSheet.js","App.js","serviceWorker.js","index.js"],"names":["DIV","styled","div","Header","width","alt","src","useStyles","makeStyles","avatar","margin","bigAvatar","height","H1","h1","H3","h3","IMG","img","BasicCard","props","useState","classes","console","log","Card","CardContent","class","data","title","Grid","container","justify","alignItems","Avatar","className","name","CardActions","Button","size","color","onClick","theme","root","maxWidth","backgroundColor","palette","background","paper","inline","display","RankCard","Fragment","List","map","ListItem","ListItemAvatar","ListItemText","primary","key","id","KingCard","clicked","setClicked","onClickHandler","PaperSheet","text","style","DIV2","GlobalStyle","createGlobalStyle","App","mandam","setMandam","emoji","setEmoji","earlyBird","setEarlyBird","fetchData","url","a","fetch","response","json","jsonData","mandomData","emojiData","mandomArr","first","thumbnail","second","third","emojiArr","earlyBirdArr","useEffect","Boolean","window","location","hostname","match","ReactDOM","render","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"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","file":"static/js/main.80d5b476.chunk.js","sourcesContent":["import React, { useState, useEffect, useRef } from \"react\";\nimport styled, { createGlobalStyle } from \"styled-components\";\n\nconst Header = () => {\n  return (\n    <DIV>\n      <img width=\"459\" alt=\"imgNavyLogo@2x\" src=\"https://user-images.githubusercontent.com/18614517/63075924-449da280-bf6e-11e9-8ff2-a9c033f245a6.png\"></img>\n    </DIV>\n  );\n}\n\nconst DIV = styled.div`\n  height: 50px;\n  text-align: center;\n  font-weight: 800;\n  font-size: 30px;\n  line-height: 60px;\n`\n\n\nexport default Header;\n","import React, { useState } from \"react\";\nimport Card from '@material-ui/core/Card';\nimport CardActions from '@material-ui/core/CardActions';\nimport CardContent from '@material-ui/core/CardContent';\nimport Button from '@material-ui/core/Button';\nimport { makeStyles } from '@material-ui/core/styles';\nimport Avatar from '@material-ui/core/Avatar';\nimport Grid from '@material-ui/core/Grid';\nimport styled, { createGlobalStyle } from \"styled-components\";\n\nconst useStyles = makeStyles({\n    avatar: {\n      margin: 10,\n    },\n    bigAvatar: {\n      margin: 10,\n      width: 80,\n      height: 80,\n    },\n  });\n\nconst BasicCard = (props) => {\n    const [first, setFirst] = useState({})\n    const classes = useStyles();\n    console.log('BasicCard');\n    return (\n        <Card>\n        <CardContent>\n            <div>\n            <H1 class=\"king-name\">\n            {props.data ? props.data.title : '무슨왕'}\n            </H1>\n            <IMG src=\"https://postfiles.pstatic.net/MjAxOTA4MTVfMTUx/MDAxNTY1ODUyODMyOTA4.YQg1bBDPwQ2tmnf9xnbHEMRgfoNK6rcRhJu56TfCsUgg.DzlL65T23PyvmbaXYMxdxGlk1Fps-D7VMzfO5Ft_fRUg.PNG.hrr11/imgCrown.png?type=w773\"></IMG>\n            <Grid container justify=\"center\" alignItems=\"center\">\n      <Avatar alt=\"Remy Sharp\" src={props.data? props.data.img : 'https://avatars3.githubusercontent.com/u/28622146?s=460&v=4'} className={classes.bigAvatar} />\n    </Grid>\n    <H3>{props.data ? props.data.name : 'loading'}</H3>\n            </div>\n        </CardContent>\n        <CardActions>\n            <Button size=\"small\" color=\"primary\" onClick={props.onClick}>랭킹보기</Button>\n        </CardActions>\n    </Card>\n    )\n}\n\nconst H1 = styled.h1`\n    color: #424242;\n    text-align: center;\n`\n\nconst H3 = styled.h3`\n    color: #424242; \n    text-align: center;\n`\n\nconst IMG = styled.img`\n    position: relative;\n    left: 110px;\n    top: 20px; \n    width: 60px;\n    height: 60px;\n`\n\nexport default BasicCard;","import React, { useState } from \"react\";\nimport { makeStyles } from '@material-ui/core/styles';\nimport CardActions from '@material-ui/core/CardActions';\nimport Button from '@material-ui/core/Button';\n\nimport List from '@material-ui/core/List';\nimport ListItem from '@material-ui/core/ListItem';\nimport Divider from '@material-ui/core/Divider';\nimport ListItemText from '@material-ui/core/ListItemText';\nimport ListItemAvatar from '@material-ui/core/ListItemAvatar';\nimport Avatar from '@material-ui/core/Avatar';\n\nimport Card from '@material-ui/core/Card';\nimport CardContent from '@material-ui/core/CardContent';\n\nconst useStyles = makeStyles(theme => ({\n    root: {\n      width: '100%',\n      maxWidth: 360,\n      backgroundColor: theme.palette.background.paper,\n    },\n    inline: {\n      display: 'inline',\n    },\n  }));\n  \n\nconst RankCard = (props) => {\n\n    const classes = useStyles();\n\n    const makeLiComponent = (datas) => {\n        const arr = datas.map(data => {\n            return (\n            <Card>\n                <CardContent>\n                <ListItem alignItems=\"flex-start\">\n                <ListItemAvatar>\n                  <Avatar alt=\"Remy Sharp\" src={data.img} />\n                </ListItemAvatar>\n                <ListItemText\n                  primary={data.name} key={data.id}\n                />\n              </ListItem>\n              </CardContent>\n              </Card>\n            )\n        })\n        return arr;\n    }\n\n    return (\n    <React.Fragment>\n    <List>\n    {makeLiComponent(props.data)}\n    </List>\n    <CardActions>\n    <Button size=\"small\" color=\"primary\" onClick={props.onClick}>랭킹보기</Button>\n    </CardActions>\n    </React.Fragment>\n    )\n}\n\nexport default RankCard;","import React, { useState, useEffect } from \"react\";\nimport BasicCard from './BasicCard.jsx'\nimport RankCard from './RankCard.jsx'\nimport styled from 'styled-components'\nimport Card from '@material-ui/core/Card';\nimport CardActions from '@material-ui/core/CardActions';\nimport CardContent from '@material-ui/core/CardContent';\n\nconst KingCard = (props) => {\n    const [first, setFirst] = useState({});\n    const [second, setSecond] = useState({});\n    const [third, setThird] = useState({});\n    const [clicked, setClicked] = useState(false);\n    \n    const onClickHandler = () => {\n        if (clicked) setClicked(false);\n        else setClicked(true);\n    }\n\n    const define = () => {\n        if (clicked) {\n            return (<RankCard data={props.data} onClick = {onClickHandler}></RankCard>)\n        }\n        return (\n        <BasicCard data={props.data[0]} onClick = {onClickHandler}></BasicCard>\n        )\n    }\n    \n    return (\n        <DIV>\n            {define()}\n        </DIV>\n    )\n}\n\nconst DIV = styled.div`\n    width: 300px;\n    margin-top: 10px;\n`\n\nexport default KingCard; ","import React from 'react';\nimport Marquee from \"react-smooth-marquee\"\nimport styled from 'styled-components'\nimport './index.css';\n\nconst PaperSheet = () => {\n\n  return (\n      <Marquee class=\"marquee\" text=\"helo\" style=\"overflow-x: hidden; display: block; \">어머니는 말씀하셨지 뭐든 1등만 하면 된다고 어머니는 말씀하셨지 뭐든 1등만 하면 된다고 어머니는 말씀하셨지 뭐든 1등만 하면 된다고 어머니는 말씀하셨지 뭐든 1등만 하면 된다고</Marquee>\n  );\n}\n\n\n\nexport default PaperSheet;","import React, { useState, useEffect } from \"react\";\nimport Header from './Header';\nimport KingCard from './KingCard';\nimport PaperSheet from './PaperSheet';\nimport styled, { createGlobalStyle } from \"styled-components\";\n\n\nfunction App() {\n  const [mandam, setMandam] = useState([])\n  const [emoji, setEmoji] = useState([])\n  const [earlyBird, setEarlyBird] = useState([])\n  const [soccer, setSoccer] = useState([])\n\n  const fetchData = async (url) => {\n    const response = await fetch(url);\n    const jsonData = await response.json();\n\n    const mandomData = jsonData[0];\n    const emojiData = jsonData[1];\n    \n    const mandomArr = [\n      {title: \"투머치토커 \", name : mandomData.first.name, img : mandomData.first.thumbnail, id: mandomData.first.id},\n      {title: \"투머치토커 \", name : mandomData.second.name, img : mandomData.second.thumbnail, id: mandomData.second.id},\n      {title: \"투머치토커 \", name : mandomData.third.name, img : mandomData.third.thumbnail, id: mandomData.third.id},\n    ]\n\n    const emojiArr = [\n      {title: \"공감요정 \", name : emojiData.first.name, img : emojiData.first.thumbnail, id: emojiData.first.id},\n      {title: \"공감요정 \", name : emojiData.second.name, img : emojiData.second.thumbnail, id: emojiData.second.id},\n      {title: \"공감요정 \", name : emojiData.third.name, img : emojiData.third.thumbnail, id: emojiData.third.id},\n    ]\n\n    const earlyBirdArr = [\n      {title: \"바지런쟁이 \", name : 'Michelle', img : \"https://avatars0.githubusercontent.com/u/18614517?s=460&v=4\", id: 1},\n      {title: \"바지런쟁이 \", name : 'MINDY', img : \"https://avatars2.githubusercontent.com/u/33537899?s=400&v=4\", id: 2},\n      {title: \"바지런쟁이 \", name : 'andole', img : \"https://avatars3.githubusercontent.com/u/40727649?s=400&v=4\", id: 3},\n    ]\n    \n    console.log(mandomArr);\n    console.log(emojiArr);\n    setMandam(mandomArr);\n    setEmoji(emojiArr);\n    setEarlyBird(earlyBirdArr);\n  }\n  \n\n  useEffect(() => {\n   fetchData(\"http://54.180.32.184/api/archives/\");\n  }, [])\n\n  return (\n    <React.Fragment>\n    <GlobalStyle />\n    <Header></Header>\n    <DIV>\n    <KingCard data={mandam}></KingCard>\n    <KingCard data={emoji}></KingCard>\n    </DIV>\n    <DIV2>\n    <PaperSheet></PaperSheet>\n    </DIV2>\n    <DIV>\n    <KingCard data={earlyBird}></KingCard>\n    </DIV>\n    </React.Fragment>\n  );\n}\n\nconst DIV = styled.div`\n  display: flex;\n  justify-content: space-around;\n`\n\nconst DIV2 = styled.div`\n  background-color: #FFE57F;\n  width: 100%;\n  height: 60px;\n  line-height: 60px;\n  color: #424242;\n  font-size: 20px;\n  font-weight: 800;\n`\n\nconst GlobalStyle = createGlobalStyle`\n  body {\n    background-color: #D6E7FC;\n  }\n`;\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}